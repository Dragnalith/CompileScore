<UserControl x:Class="CompileScore.Overview.OverviewTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CompileScore.Overview"
             xmlns:commonUtils="clr-namespace:CompileScore.Common"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <commonUtils:UITimeConverter x:Key="uiTimeConverter"/>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridLineKey}}" />
            <Setter Property="VerticalGridLinesBrush"   Value="{DynamicResource {x:Static vsshell:VsBrushes.GridLineKey}}" />
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingBackgroundKey}}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Name="HedearGrid" Background="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingBackgroundKey}}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                                    Grid.Column="1" Width="8" Height="6" Margin="0,0,8,0"
                                    Fill="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}"
                                    VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1"  >
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="2" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridRow">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.CommandBarSelectedBorderKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <TextBox   Grid.Column="0" x:Name="searchTextBox" TextChanged="SearchTextChangedEventHandler"/>
            <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Path=Items.Count, ElementName=compilaDataGrid, StringFormat='Count {0}'}" />
        </Grid>
        <DataGrid  Grid.Row="1" FrozenColumnCount="1" x:Name="compilaDataGrid" IsReadOnly="True" AutoGenerateColumns="False" HeadersVisibility="Column" SelectionUnit="FullRow">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name"  Binding="{Binding Name}" IsReadOnly="True" Width="200"/>

                <DataGridTextColumn Header="Duration"              Binding="{Binding Duration,             Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Frontend"              Binding="{Binding Frontend,             Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Backend"               Binding="{Binding Backend,              Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Includes"              Binding="{Binding Source,               Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Parse Class"           Binding="{Binding ParseClass,           Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Parse Template"        Binding="{Binding ParseTemplate,        Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="100"/>
                <DataGridTextColumn Header="Instantiate Class"     Binding="{Binding InstantiateClass,     Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="110"/>
                <DataGridTextColumn Header="Instantiate Function"  Binding="{Binding InstantiateFunction,  Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="125"/>
                <DataGridTextColumn Header="Pending Instantations" Binding="{Binding PendingInstantations, Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="130"/>
                <DataGridTextColumn Header="Code Generation"       Binding="{Binding Codegen,              Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="110"/>
                <DataGridTextColumn Header="Run Pass"              Binding="{Binding RunPass,              Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
                <DataGridTextColumn Header="Optimize Function"     Binding="{Binding OptFunction,          Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="120"/>
                <DataGridTextColumn Header="Optimize Module"       Binding="{Binding OptModule,            Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="110"/>
                <DataGridTextColumn Header="Other"                 Binding="{Binding Other,                Converter={StaticResource uiTimeConverter}}"  IsReadOnly="True" Width="75"/>
            </DataGrid.Columns>
        </DataGrid>
        <!--
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <TextBlock TextAlignment="Right" FontWeight="Bold">Total</TextBlock>
        </StackPanel>
        -->
    </Grid>
</UserControl>
